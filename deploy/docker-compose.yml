version: "3.9"
services:
  api:
    build: ..
    command: uvicorn apps.api.main:app --host 0.0.0.0 --port 8000
    ports: ["8000:8000"]
    restart: unless-stopped
    networks:
      - omni_net
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/ >/dev/null || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
  redis:
    image: redis:7
    command: ["redis-server","--appendonly","yes"]
    ports: ["6379:6379"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    networks:
      - omni_net
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: omni
      POSTGRES_USER: omni
      POSTGRES_DB: omni
    ports: ["5432:5432"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "omni"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - omni_net
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
  clickhouse:
    image: clickhouse/clickhouse-server:24
    ports: ["9000:9000","8123:8123"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - ch_data:/var/lib/clickhouse
    networks:
      - omni_net
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    ports: ["9090:9090"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - omni_net
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
  grafana:
    image: grafana/grafana:latest
    ports: ["3000:3000"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - graf_data:/var/lib/grafana
    networks:
      - omni_net
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
networks:
  omni_net: {}

volumes:
  pg_data:
  ch_data:
  redis_data:
  prom_data:
  graf_data:
